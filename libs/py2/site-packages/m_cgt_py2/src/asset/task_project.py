# -*- coding: utf-8 -*-
from m_cgt_py2.src.login import PermissionStrategy


class CGTAssetTaskProject(object):
    def __init__(self, project_db, login_strategy):
        # type: (str,PermissionStrategy) -> None
        self.project_db = project_db
        self.t_tw = login_strategy.login()

    def get_data(self, filter_param=None, fields_list=None):
        if filter_param is None:
            filter_param = []
        if fields_list is None:
            raise AttributeError("fields_list cannot be None")
        task_id = self.t_tw.task.get_id(self.project_db, self.module, filter_param, limit="20000")
        data = self.t_tw.task.get(self.project_db, self.module, task_id, field_sign_list=fields_list, limit="20000")
        if data is None:
            return
        for item in data:
            yield item

    @property
    def module(self):
        return "asset"

    @property
    def fields(self):
        fields = self.t_tw.task.fields(self.project_db, self.module)
        return fields

    @property
    def fields_and_str(self):
        return self.t_tw.task.fields_and_str(self.project_db, self.module)
