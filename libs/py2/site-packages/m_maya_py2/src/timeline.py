# -*- coding: utf-8 -*-

import enum
from m_maya_py2.src.base import MayaBasePy2


class FrameRateType(enum.Enum):
    film = 24
    pal = 25
    ntsc = 30
    ntscf = 60


class MayaTimeLinePy2:
    def __init__(self):
        self._maya_base = MayaBasePy2()

    def set_frame(self, start, end):
        self.cmds.playbackOptions(animationStartTime=start,
                                            animationEndTime=end,
                                            maxTime=start, minTime=end)
        self.cmds.setAttr('defaultRenderGlobals.startFrame', start)
        self.cmds.setAttr('defaultRenderGlobals.endFrame', end)
        self.cmds.currentTime(start)

    def set_frame_rate(self, frame_rate):
        self.cmds.currentUnit(time=frame_rate.name)

    @property
    def frame_rate(self):
        time_unit = self.cmds.currentUnit(query=True, time=True)
        if time_unit == "film":
            return 24
        elif time_unit == "pal":
            return 25
        elif time_unit == "ntsc":
            return 30
        elif time_unit == "ntscf":
            return 60
        else:
            raise ValueError("Unknown time unit")

    @property
    def cmds(self):
        return self._maya_base.cmds()

    @property
    def frames_animation(self):
        return int(self.cmds.playbackOptions(q=1, ast=1)), int(
            self.cmds.playbackOptions(q=1, aet=1))

    @property
    def frames_time(self):
        return int(self.cmds.playbackOptions(q=1, min=1)), int(
            self.cmds.playbackOptions(q=1, max=1))

    @property
    def start_animation_frame(self):
        return int(self.cmds.playbackOptions(q=1, ast=1))

    @property
    def end_animation_frame(self):
        return int(self.cmds.playbackOptions(q=1, aet=1))
