# -*- coding: utf-8 -*-
import os
import tempfile

from enum import Enum
from .base import MayaBasePy2


class SaveType(Enum):
    ma = "mayaAscii"
    mb = "mayaBinary"


class MayaFileOperatorPy2:
    def __init__(self):
        self._maya_base = MayaBasePy2()

    def new(self, force=False):
        # type: (bool) -> MayaFileOperatorPy2
        self.cmds.file(new=True, f=force)
        return self

    def open(self, url, force=False):
        # type: (str,bool) -> MayaFileOperatorPy2
        self.cmds.file(url, o=True, f=force)
        return self

    def save(self, save_type, force=False):
        # type: (SaveType,bool) -> MayaFileOperatorPy2
        self.cmds.file(save=True, type=save_type.value, force=force)
        return self

    def save_as(self, url, save_type, force=False):
        # type: (str,SaveType,bool) -> MayaFileOperatorPy2
        dir_path = os.path.dirname(url)
        if not os.path.exists(dir_path):
            raise ValueError("Directory '{}' does not exist".format(dir_path))
        self.cmds.file(rename=url.replace("\\", "/"))
        self.save(save_type.value, force=force)

    def save_as_temp_file(self, file_name, save_type=SaveType.ma):
        temp_dir = tempfile.gettempdir()
        maya_temp = os.path.join(temp_dir, "maya_temp", "scene")
        if not os.path.exists(maya_temp):
            os.makedirs(maya_temp)
        full_path = os.path.join(maya_temp, file_name).replace("\\", "/")
        self.cmds.file(rename=str(full_path))
        self.cmds.file(save=True, type=save_type.value, force=True)
        return full_path

    def add_file_info(self, info_data):
        for key, value in info_data.items():
            self.cmds.fileInfo(key, value)

    def remove_file_info(self, key):
        self.cmds.fileInfo(rm=key)

    def get_file_info(self, key):
        data = self.cmds.fileInfo(key, query=True)
        return data[0] if data else None

    def has_file_info(self, key):
        return True if self.cmds.fileInfo(key, query=True) else False

    @property
    def path(self):
        return self.cmds.file(q=1, sn=1)

    @property
    def cmds(self):
        return self._maya_base.cmds()
