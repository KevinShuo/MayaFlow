# -*- coding: utf-8 -*-
from m_maya_py2.src.base import MayaBasePy2
from m_maya_py2.src.file import MayaFileOperatorPy2
from m_maya_py2.src.ui import MayaUIPy2


class MayaAlembicPy2:
    def __init__(self):
        self._maya_base = MayaBasePy2()
        self.maya_file = MayaFileOperatorPy2()
        self.maya_ui = MayaUIPy2()
        self._maya_base.load_plugin("AbcExport.mll")
        self._maya_base.load_plugin("AbcImport.mll")

    def export_frame(self, hierarchy, path, start_frame, end_frame):
        """
        导出帧范围的 Alembic 文件，带进度条和中断功能。

        :param hierarchy: 场景层级路径
        :param path: 输出 Alembic 文件路径
        :param start_frame: 起始帧
        :param end_frame: 结束帧
        """
        total_frames = end_frame - start_frame + 1

        self.maya_ui.progress_window("Exporting", 0, total_frames, "Exporting...")

        try:
            # 拼接层级信息
            root_hierarchy = " ".join(["-root {}".format(item) for item in hierarchy])

            # 构造 Alembic 导出命令
            job = "-frameRange {} {} -uvWrite -worldSpace -dataFormat ogawa {} -file {}".format(start_frame, end_frame,
                                                                                                root_hierarchy, path)
            # 执行 Alembic 导出
            self.cmds.AbcExport(j=job)

            # 更新进度为 100%
            self.maya_ui.progress_window("Exporting", total_frames, total_frames, "Task Completed!")
            print("Export task completed successfully.")

        except Exception as e:
            print("An error occurred during export: {}".format(e))

        finally:
            # 确保进度窗口关闭
            self.maya_ui.progress_window("Exporting", total_frames, total_frames, "Export Completed.")

    @property
    def cmds(self):
        return self._maya_base.cmds()
