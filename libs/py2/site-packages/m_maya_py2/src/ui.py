# -*- coding: utf-8 -*-
from PySide2.QtCore import Qt
from PySide2.QtWidgets import QWidget
from shiboken2 import wrapInstance

from enum import Enum
from m_maya_py2.src.base import MayaBasePy2


class MessageType(Enum):
    question = 0
    information = 1
    warning = 2
    critical = 3


class MayaUIPy2(object):
    def __init__(self):
        self._maya_base = MayaBasePy2()

    def message_box(self, title, message, message_type, buttons=None):
        if buttons is None:
            buttons = ['Yes', 'No']
        return self.cmds.confirmDialog(title=title, message=message, button=buttons, icon=message_type.name)

    def progress_window(self, title, progress, max_value, status):
        """
        创建并更新一个带中断功能的进度窗口。

        :param title: 窗口标题
        :param progress: 当前进度（0-max_value）
        :param max_value: 进度条的最大值
        :param status: 当前状态描述
        :return: 如果任务被中断返回 True，否则返回 False
        """
        if not self.cmds.progressWindow(q=True, exists=True):
            self.cmds.progressWindow(
                title=title,
                progress=0,
                status=status,
                isInterruptable=True,
                maxValue=max_value
            )

        if self.cmds.progressWindow(q=True, isCancelled=True):
            self.cmds.progressWindow(endProgress=True)
            return True

        if progress >= max_value:
            self.cmds.progressWindow(endProgress=True)
        else:
            self.cmds.progressWindow(edit=True, progress=progress, status=status)

        return False

    def wrap_pyside(self, ui):
        import maya.OpenMayaUI as omui
        ui.setParent(wrapInstance(int(omui.MQtUtil_mainWindow()), QWidget))
        ui.setWindowFlags(Qt.Window)

    @property
    def cmds(self):
        return self._maya_base.cmds()
