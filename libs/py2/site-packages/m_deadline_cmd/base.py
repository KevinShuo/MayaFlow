# -*- coding: utf-8 -*-
import os
import subprocess

from m_deadline_cmd.util import get_temp_path


class DeadlineCmdBase:
    def __init__(self):
        self._cmd_path = r"C:\Program Files\Thinkbox\Deadline10\bin\deadlinecommand.exe"

    def submit_task(self):
        """
            提交任务

        :param job_path: job 路径
        :param plugin_path: plugin 路径
        :return:
        """
        process = subprocess.run([self.deadline_command, self.job_path, self.plugin_path], capture_output=True,
                                 text=True, creationflags=subprocess.CREATE_NO_WINDOW)
        return process.stdout

    @property
    def deadline_command(self):
        if not os.path.exists(self._cmd_path):
            raise FileNotFoundError(self._cmd_path)
        return self._cmd_path

    @deadline_command.setter
    def deadline_command(self, path: str):
        self._cmd_path = path

    @property
    def cache_dir(self):
        return get_temp_path()

    @property
    def job_path(self):
        return os.path.join(self.cache_dir, "job.json")

    @property
    def plugin_path(self):
        return os.path.join(self.cache_dir, "plugin.json")
