# -*- coding: utf-8 -*-
import dataclasses
from enum import Enum


class PluginName(Enum):
    MayaBatch = 0
    MayaCmd = 1
    Nuke = 2
    Houdini = 3


@dataclasses.dataclass
class SingleFrame:
    frame: int

    def __str__(self):
        return str(self.frame)

    def __repr__(self):
        return str(self.frame)

    def __eq__(self, other):
        return self.frame == other.frame

    def __lt__(self, other):
        return self.frame < other.frame

    def __gt__(self, other):
        return self.frame > other.frame

    def __add__(self, other) -> "SingleFrame":
        return SingleFrame(self.frame + other.frame)

    def __hash__(self):
        return hash(self.frame)

    def __int__(self):
        return self.frame


@dataclasses.dataclass
class FrameRange:
    start: int
    end: int

    def __str__(self):
        return f"{self.start}-{self.end}"

    def __repr__(self):
        return str(self.start)

    def __eq__(self, other):
        return self.start == other.start and self.end == other.end

    def __add__(self, other):
        return FrameRange(self.start + other.start, self.end + other.end)

    def __hash__(self):
        return hash((self.start, self.end))


class ArnoldVerbose(Enum):
    Error = 0
    Warnings = 1
    Info = 2
    Debug = 3


class RenderType(Enum):
    Arnold = 0


class MayaVersion(Enum):
    Maya2022 = "2022"
    Maya2023 = "2023"
